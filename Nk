# Linked List Reversal Using a Stack

## Introduction

In this example, we demonstrate how to reverse a linked list using a stack. The stack helps us store the node values of the list, and we then overwrite the original list in reverse order.

## Code

```cpp
void reverseList(Node* head) {
    if (head == nullptr) {
        return;
    }

    stack<int> st;
    Node* temp = head;

    // Push all data values of the linked list onto the stack
    while (temp != nullptr) {
        st.push(temp->data);
        temp = temp->next;
    }

    temp = head;

    // Pop from the stack and update the linked list with reversed data
    while (temp != nullptr) {
        temp->data = st.top();
        st.pop();
        temp = temp->next;
    }

    return head;
}
